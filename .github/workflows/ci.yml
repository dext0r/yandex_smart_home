name: CI

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - 'v*'
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - uses: pre-commit/action@v3.0.1

  tests:
    name: Run tests (${{ matrix.tox-env }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tox-env: 2023_9
            python-version: '3.11'
          - tox-env: 2023_10
            python-version: '3.11'
          - tox-env: 2023_11
            python-version: '3.11'
          - tox-env: 2023_12
            python-version: '3.11'
          - tox-env: 2024_1
            python-version: '3.11'
          - tox-env: 2024_2
            python-version: '3.11'
          - tox-env: 2024_4
            python-version: '3.12'
          - tox-env: 2024_5
            python-version: '3.12'
          - tox-env: 2024_6
            python-version: '3.12'
          - tox-env: 2024_7
            python-version: '3.12'
          - tox-env: 2024_8
            python-version: '3.12'
          - tox-env: 2024_9
            python-version: '3.12'

          - tox-env: 2024_10
            python-version: '3.12'
            latest: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load ~/.local cache
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: dotlocal-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Load virtual environment cache
        uses: actions/cache@v4
        with:
          path: |
            .venv
            .tox
          key: venv-${{ hashFiles('pyproject.toml', 'poetry.lock') }}-${{ matrix.tox-env }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.8.3'
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv

      - name: Install dependencies
        run: poetry install --only tox

      - name: Run tests
        run: poetry run tox -e ${{ matrix.tox-env }}

      - name: Upload coverage report
        if: ${{ matrix.latest == true }}
        uses: codecov/codecov-action@v4
        with:
          files: .tox/${{ matrix.tox-env }}/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  validate:
    name: Validate for HACS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration
